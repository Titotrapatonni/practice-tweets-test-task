{"ast":null,"code":"var _jsxFileName = \"/Volumes/HDD/goit/practice-tweets-test-task/my-app/src/components/Filter/Filter.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"all\",\n  label: \"All\",\n  name: \"all\"\n}, {\n  value: \"follow\",\n  label: \"Follow\",\n  name: \"follow\"\n}, {\n  value: \"followings\",\n  label: \"Followings\",\n  name: \"followings\"\n}];\nexport const Filter = () => {\n  _s();\n  var _fltrRef$current;\n  let fltrRef = useRef();\n  console.log((_fltrRef$current = fltrRef.current) === null || _fltrRef$current === void 0 ? void 0 : _fltrRef$current.props.value.value);\n  useEffect(() => {\n    // Эффект выполняется после монтирования,\n    // поэтому всегда будет ссылкой на DOM-элемент\n    console.log(fltrRef.current.props.value.value);\n  });\n  const handleClick = () => {\n    // Клики будут после монтирвоания,\n    // поэтому всегда будет ссылкой на DOM-элемент\n    console.log(fltrRef.current.props.value.value);\n  };\n  console.log(fltrRef.current.props.value.value);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: options,\n    ref: fltrRef,\n    onChange: handleClick,\n    defaultInputValue: \"All\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"HTwPb5xmotgYunL2NsMU1ycCpBQ=\");\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["useEffect","useRef","Select","jsxDEV","_jsxDEV","options","value","label","name","Filter","_s","_fltrRef$current","fltrRef","console","log","current","props","handleClick","ref","onChange","defaultInputValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/HDD/goit/practice-tweets-test-task/my-app/src/components/Filter/Filter.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\n\nconst options = [\n  { value: \"all\", label: \"All\", name: \"all\" },\n  { value: \"follow\", label: \"Follow\", name: \"follow\" },\n  { value: \"followings\", label: \"Followings\", name: \"followings\" },\n];\n\nexport const Filter = () => {\n  let fltrRef = useRef();\n  console.log(fltrRef.current?.props.value.value);\n\n  useEffect(() => {\n    // Эффект выполняется после монтирования,\n    // поэтому всегда будет ссылкой на DOM-элемент\n    console.log(fltrRef.current.props.value.value);\n  });\n\n  const handleClick = () => {\n    // Клики будут после монтирвоания,\n    // поэтому всегда будет ссылкой на DOM-элемент\n    console.log(fltrRef.current.props.value.value);\n  };\n  console.log(fltrRef.current.props.value.value);\n  return (\n    <Select\n      options={options}\n      ref={fltrRef}\n      onChange={handleClick}\n      defaultInputValue=\"All\"\n    />\n  );\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAM,CAAC,EAC3C;EAAEF,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,EACpD;EAAEF,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE,YAAY;EAAEC,IAAI,EAAE;AAAa,CAAC,CACjE;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAC1B,IAAIC,OAAO,GAAGX,MAAM,EAAE;EACtBY,OAAO,CAACC,GAAG,EAAAH,gBAAA,GAACC,OAAO,CAACG,OAAO,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBK,KAAK,CAACV,KAAK,CAACA,KAAK,CAAC;EAE/CN,SAAS,CAAC,MAAM;IACd;IACA;IACAa,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,OAAO,CAACC,KAAK,CAACV,KAAK,CAACA,KAAK,CAAC;EAChD,CAAC,CAAC;EAEF,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACAJ,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,OAAO,CAACC,KAAK,CAACV,KAAK,CAACA,KAAK,CAAC;EAChD,CAAC;EACDO,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,OAAO,CAACC,KAAK,CAACV,KAAK,CAACA,KAAK,CAAC;EAC9C,oBACEF,OAAA,CAACF,MAAM;IACLG,OAAO,EAAEA,OAAQ;IACjBa,GAAG,EAAEN,OAAQ;IACbO,QAAQ,EAAEF,WAAY;IACtBG,iBAAiB,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvB;AAEN,CAAC;AAACd,EAAA,CAxBWD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}